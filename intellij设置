#避免每次打开intellij的时候直接打开项目
systerm setting -> Reopen last project on startup去掉勾

#提示不去分大小写
setting->然后，输入：sensitive
将右侧的 case sensitive completion 修改为NONE

#鼠标悬停提示
setting->editor-> General->Show quick doc on mouse move

#显示行号
setting-》editor->appearance->show line number




2. Ctrl + N（Ctrl + Shift + N）     跳转到指定的java文件（其它文件）
这个功能很方便，至少我不用每回都在一长串的文件列表里找寻我想要编辑的类文件和jsp文件了
3. Ctrl + B     跳转到定义处
4. Ctrl + Alt + Right/Left     在编辑过的代码位置之间跳转（前进/后退）
5. Ctrl + Alt + T        用*来围绕选中的代码行（ * 包括if、while、
                         try catch等）
这个功能也很方便，把以前要做的：①先写if-else，②然后调整代码的
缩进格式，还要注意括号是否匹配了，现在用这个功能来做，省事多了
6. Ctrl + Alt + B       跳转到方法实现处
7. Ctrl + W       按一个word来进行选择操作
在IDEA里的这个快捷键功能是先选择光标所在字符处的单词，然后是选择源
代码的扩展区域。举例来说，对下边这个语句
java.text.SimpleDateFormat formatter = 
new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm");
当光标的位置在双引号内的字符串中时，会先选中这个字符串，然后是等号
右边的表达式，再是整个句子。我一般都是在对代码进行重新修改的时候使用
它来选择出那些长长的复合表达式，很方便：）
8. Shift + F1       在浏览器中显示指定的java docs
这个也应该是几乎所有的java ide都提供的功能，就不多说了。
9. Ctrl + Q         在editor window中显示java docs
这个功能很方便--因为有时仅仅是忘记了自己编写的方法中的某个参数的
含义，此时又不想再起一个浏览器来查看java doc，此时这个功能的好处就
体现出来了
10. Ctrl + /        注释/反注释指定的语句
它可以注释和反注释你所选择的语句（使用单行注释符号"//"），
也可以用Ctrl + Shift + / 来进行多行语句的注释（即使用多行注释符号"/* ... */"）
11. F2/Shift + F2              跳转到下/上一个错误语句处
IDEA提供了一个在错误语句之间方便的跳转的功能，你使用这个快捷键可以
快捷在出错的语句之间进行跳转。
12. Shift + F6                 提供对方法、变量的重命名
对IDEA提供的Refector功能我用得比较少，相比之下这个功能是我用得最多
的了。对于这个功能没什么可说的了，确实很方便，赶快试一试吧。

13. Ctrl + Alt + L         根据模板格式化选择的代码
根据模板中设定的格式来format你的java代码，不过可惜的是只对java文件
有效：（
14. Ctrl + Alt + I         将选中的代码进行自动缩进编排
这个功能在编辑jsp文件的时候也可以工作，提供了一个对上边格式化代码
功能的补充。
15. Ctrl + Alt + O         优化import
自动去除无用的import语句，蛮不错的一个功能。
16. Ctrl + ]/[             跳转到代码块结束/开始处

Ctrl+G（跳转到指定行）、Ctrl+F4（关闭当前编辑页面）、Ctrl+F（搜索）等等
可以去IDEA的官方网站下载一份IDEA 3.0 Default Keymap的pdf文档
（http://www.intellij.com/docs/ReferenceCard.pdf），上面有快捷键的
详细列表及功能简介，如果你觉得IDEA定义的快捷键的键位组合不符合你的
使用习惯的话，你可以在Option--Keymaps中修改设置成你的习惯键位组合。


Ctrl+Space            // Complete Code, 与输入法冲突, 改为Alt+S
Ctrl+D                // 行复制, 或选定字符串复制
Ctrl + W       按一个word来进行选择操作
Ctrl + N（Ctrl + Shift + N）     //跳转到指定的java文件（其它文件）
Ctrl + B     跳转到定义处
Ctrl + Alt + B       跳转到方法实现处
Ctrl+J                // 插入代码模板
Alt+Insert            // Generate, 生成Constructor, setter, getter
Ctrl+O                // 覆盖方法
Ctrl+I                // 实现方法
Ctrl+Alt+T            // Surround With
Ctrl+/                // 行注释
Ctrl + Shift + / 来进行多行语句的注释（即使用多行注释符号"/* ... */"）
Ctrl + Alt + L            // 格式化代码
Ctrl + Alt + O         优化import
Ctrl + Alt + T        用*来围绕选中的代码行（ * 包括if、while、
                         try catch等）
Alt+F7                // 查找使用情况
Shift+F6              // 重命名
F6                    // 移动
Ctrl+Shift+F7         // 显示字符串使用次数
Alt+Delete            // 安全删除
Ctrl + ]/[             跳转到代码块结束/开始处
